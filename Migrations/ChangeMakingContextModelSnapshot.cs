// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using onni.Models;

namespace onni.Migrations
{
    [DbContext(typeof(ChangeMakingContext))]
    partial class ChangeMakingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("onni.Models.Categories", b =>
                {
                    b.Property<int>("CategoriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoriesID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CategoriesId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("onni.Models.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyContent")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CommentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("onni.Models.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyContent")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Files")
                        .IsUnicode(false);

                    b.Property<string>("Images")
                        .IsUnicode(false);

                    b.Property<int>("LikeCounts");

                    b.Property<int?>("ParentProjectId")
                        .HasColumnName("ParentProjectID");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("StatusId")
                        .HasColumnName("StatusID");

                    b.Property<string>("Tags");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ViewCounts");

                    b.HasKey("ProjectId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("StatusId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("onni.Models.SavedProjects", b =>
                {
                    b.Property<int>("SavedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SavedID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<DateTime>("SavedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SavedId");

                    b.HasIndex("ProjectId");

                    b.ToTable("SavedProjects");
                });

            modelBuilder.Entity("onni.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("onni.Models.Comments", b =>
                {
                    b.HasOne("onni.Models.Projects", "Project")
                        .WithMany("Comments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Projects_Comments");
                });

            modelBuilder.Entity("onni.Models.Projects", b =>
                {
                    b.HasOne("onni.Models.Categories", "Category")
                        .WithMany("Projects")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Projects_Categories");

                    b.HasOne("onni.Models.Projects", "ParentProject")
                        .WithMany("InverseParentProject")
                        .HasForeignKey("ParentProjectId")
                        .HasConstraintName("FK_Parents_Project");

                    b.HasOne("onni.Models.Status", "Status")
                        .WithMany("Projects")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Projects_Status");
                });

            modelBuilder.Entity("onni.Models.SavedProjects", b =>
                {
                    b.HasOne("onni.Models.Projects", "Project")
                        .WithMany("SavedProjects")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Projects_SavedProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
