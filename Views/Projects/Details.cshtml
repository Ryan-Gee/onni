@model IEnumerable<onni.Models.Comments>

@{
    ViewData["Title"] = "Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div data-page="project-details">

    <h2>Project</h2>

    @foreach (var item in (IEnumerable<Projects>)ViewData["Projects"])
    {
        @if (User.Identity.IsAuthenticated)
        {
            <p>
                <a asp-action="Create" asp-route-ParentProjectId="@item.ProjectId">Create Child project</a>
            </p>
        }

        <div>
            @Html.DisplayFor(modelItem => item.ProjectName)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.UserName)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </div>
        <div>
            <div id="bodyContent-input" style="display:none">
                @Html.DisplayFor(modelItem => item.BodyContent)
            </div>
            <div id="bodyContent-output">

            </div>
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.Files)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.Images)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.ViewCounts)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.LikeCounts)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.Tags)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.Category)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.ParentProject.ProjectName)
        </div>
        <div>
            @Html.DisplayFor(modelItem => item.Status.StatusName)
        </div>
        if (User.Identity.Name == item.UserName || User.IsInRole("Admin"))
        {
        <div>
            <a asp-action="Edit" asp-route-id="@item.ProjectId">Edit</a>
        </div>
        }
    }
    <h2>Comments</h2>

    <partial name="_DisplayComments" />
    <partial name="_CreateComment" />
</div>
