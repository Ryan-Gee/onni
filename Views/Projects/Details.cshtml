@model onni.Models.Projects
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>@ViewData["body"]</div>

<div data-page="project-details">
    <h2>Details</h2>

    <div>
        <h4>Projects</h4>
        <hr />
        @if (User.Identity.IsAuthenticated)
        {
            <p>
                <a asp-action="Create" asp-route-ParentProjectId="@Model.ProjectId">Create Child project</a>
            </p>
        }
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ProjectName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ProjectName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CreatedDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.BodyContent)
            </dt>
            <dd>
                <div id="bodyContent-input" style="display:none">
                    @Html.DisplayFor(model => model.BodyContent)
                </div>
                <div id="bodyContent-output">

                </div>
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Files)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Files)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Images)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Images)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ViewCounts)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ViewCounts)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.LikeCounts)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.LikeCounts)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Tags)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Tags)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Category.CategoriesName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ParentProject)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ParentProject.BodyContent)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Status.StatusName)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.ProjectId">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>

    <partial name="_DisplayComments" view-data="ViewData"/>
    @*<tbody>
        @foreach (var item in (IEnumerable<Comments>)ViewData["Comments"])
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CommentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BodyContent)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CommentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CommentId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CommentId">Delete</a>
                </td>
            </tr>
        }
    </tbody>*@

</div>